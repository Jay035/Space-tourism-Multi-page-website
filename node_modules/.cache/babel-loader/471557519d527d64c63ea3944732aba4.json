{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\codex\\\\Desktop\\\\Projects\\\\portfolio\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import logo from '../components/assets/logo.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  // Create reference to store the DOM element containing the animation\n  const el = useRef(null); // Create reference to store the Typed instance itself\n\n  const typed = React.useRef(null);\n  useEffect(() => {\n    const options = {\n      strings: [\"Chibuike Ukandu\", 'a Software Developer'],\n      typeSpeed: 50,\n      backSpeed: 50\n    }; // elRef refers to the <span> rendered below\n\n    typed.current = new Typed(el.current, options);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-hero-img w-full h-screen bg-no-repeat bg-center bg-black bg-blend-multiply-300 bg-cover\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hello, \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              whitespace: 'pre'\n            },\n            ref: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"8AS0O6h/r8Z7rJkkJBCX/uZh9Aw=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","Home","el","useRef","typed","options","strings","typeSpeed","backSpeed","current","Typed","whitespace"],"sources":["C:/Users/codex/Desktop/Projects/portfolio/src/pages/Home.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\n\r\n// import logo from '../components/assets/logo.png';\r\n\r\nexport const Home = () => {\r\n  // Create reference to store the DOM element containing the animation\r\n\tconst el = useRef(null);\r\n  // Create reference to store the Typed instance itself\r\n\tconst typed = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n    \tstrings: [\r\n        \"Chibuike Ukandu\",\r\n        'a Software Developer'\r\n      ],\r\n      typeSpeed: 50,\r\n      backSpeed: 50,\r\n    };\r\n    \r\n    // elRef refers to the <span> rendered below\r\n    typed.current = new Typed(el.current, options);\r\n    \r\n  }, [])\r\n  return (\r\n    <div>\r\n        <section className='bg-hero-img w-full h-screen bg-no-repeat bg-center bg-black bg-blend-multiply-300 bg-cover'>\r\n          {/* text */}\r\n          <div className=\"type-wrap\">\r\n            <h2>Hello, <span style={{whitespace: 'pre'}} ref={el}></span></h2>\r\n          </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACxB;EACD,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAD,CAAjB,CAFyB,CAGxB;;EACD,MAAMC,KAAK,GAAGL,KAAK,CAACI,MAAN,CAAa,IAAb,CAAd;EAECH,SAAS,CAAC,MAAM;IACd,MAAMK,OAAO,GAAG;MACfC,OAAO,EAAE,CACN,iBADM,EAEN,sBAFM,CADM;MAKdC,SAAS,EAAE,EALG;MAMdC,SAAS,EAAE;IANG,CAAhB,CADc,CAUd;;IACAJ,KAAK,CAACK,OAAN,GAAgB,IAAIC,KAAJ,CAAUR,EAAE,CAACO,OAAb,EAAsBJ,OAAtB,CAAhB;EAED,CAbQ,EAaN,EAbM,CAAT;EAcA,oBACE;IAAA,uBACI;MAAS,SAAS,EAAC,4FAAnB;MAAA,uBAEE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE;UAAA,mCAAW;YAAM,KAAK,EAAE;cAACM,UAAU,EAAE;YAAb,CAAb;YAAkC,GAAG,EAAET;UAAvC;YAAA;YAAA;YAAA;UAAA,QAAX;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA9BM;;GAAMD,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}